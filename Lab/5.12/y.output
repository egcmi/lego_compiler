Terminals unused in grammar

   IF


Grammar

    0 $accept: line $end

    1 line: expr '\n'
    2     | ID

    3 expr: expr '+' expr
    4     | expr '-' expr
    5     | expr '*' expr
    6     | expr '/' expr
    7     | NUM
    8     | '-' expr


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'*' (42) 5
'+' (43) 3
'-' (45) 4 8
'/' (47) 6
error (256)
NUM (258) 7
IF (259)
ID (260) 2
UMINUS (261)


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
line (13)
    on left: 1 2, on right: 0
expr (14)
    on left: 3 4 5 6 7 8, on right: 1 3 4 5 6 8


State 0

    0 $accept: . line $end

    NUM  shift, and go to state 1
    ID   shift, and go to state 2
    '-'  shift, and go to state 3

    line  go to state 4
    expr  go to state 5


State 1

    7 expr: NUM .

    $default  reduce using rule 7 (expr)


State 2

    2 line: ID .

    $default  reduce using rule 2 (line)


State 3

    8 expr: '-' . expr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 3

    expr  go to state 6


State 4

    0 $accept: line . $end

    $end  shift, and go to state 7


State 5

    1 line: expr . '\n'
    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr

    '-'   shift, and go to state 8
    '+'   shift, and go to state 9
    '*'   shift, and go to state 10
    '/'   shift, and go to state 11
    '\n'  shift, and go to state 12


State 6

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr
    8     | '-' expr .

    $default  reduce using rule 8 (expr)


State 7

    0 $accept: line $end .

    $default  accept


State 8

    4 expr: expr '-' . expr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 3

    expr  go to state 13


State 9

    3 expr: expr '+' . expr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 3

    expr  go to state 14


State 10

    5 expr: expr '*' . expr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 3

    expr  go to state 15


State 11

    6 expr: expr '/' . expr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 3

    expr  go to state 16


State 12

    1 line: expr '\n' .

    $default  reduce using rule 1 (line)


State 13

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    4     | expr '-' expr .
    5     | expr . '*' expr
    6     | expr . '/' expr

    '*'  shift, and go to state 10
    '/'  shift, and go to state 11

    $default  reduce using rule 4 (expr)


State 14

    3 expr: expr . '+' expr
    3     | expr '+' expr .
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr

    '*'  shift, and go to state 10
    '/'  shift, and go to state 11

    $default  reduce using rule 3 (expr)


State 15

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    5     | expr '*' expr .
    6     | expr . '/' expr

    $default  reduce using rule 5 (expr)


State 16

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr
    6     | expr '/' expr .

    $default  reduce using rule 6 (expr)
