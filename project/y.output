Terminals unused in grammar

   ARRAY
   PYRAMID
   DOME
   ELSE
   AND
   OR
   EQ
   '>'
   '<'


Grammar

    0 $accept: line $end

    1 line: stmt '\n'
    2     | stmt line

    3 stmt: EXIT
    4     | SWITCH GRID GVAR
    5     | GVAR '=' GRID '(' NUM ',' NUM ')'
    6     | VAR '=' TYPE '(' NUM ',' NUM ')'
    7     | PLACE VAR AT '(' NUM ',' NUM ')'
    8     | SHOW GVAR
    9     | MOVE mopt
   10     | HEIGHT hopt
   11     | DELETE dopt
   12     | FITS VAR '(' NUM ',' NUM ')'
   13     | IF FITS VAR AT '(' NUM ',' NUM ')' THEN PLACE
   14     | IF FITS VAR AT '(' NUM ',' NUM ')' THEN MOVE

   15 mopt: VAR DIR NUM
   16     | VAR AT '(' NUM ',' NUM ')'

   17 hopt: '(' NUM ',' NUM ')'
   18     | VAR

   19 dopt: VAR
   20     | ALL
   21     | GRID GVAR


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'(' (40) 5 6 7 12 13 14 16 17
')' (41) 5 6 7 12 13 14 16 17
',' (44) 5 6 7 12 13 14 16 17
'<' (60)
'=' (61) 5 6
'>' (62)
error (256)
NUM (258) 5 6 7 12 13 14 15 16 17
DIR (259) 15
TYPE (260) 6
SHOW (261) 8
EXIT (262) 3
SWITCH (263) 4
ARRAY (264)
PYRAMID (265)
DOME (266)
GRID (267) 4 5 21
HEIGHT (268) 10
FITS (269) 12 13 14
PLACE (270) 7 13
DELETE (271) 11
ALL (272) 20
IF (273) 13 14
THEN (274) 13 14
ELSE (275)
MOVE (276) 9 14
AND (277)
OR (278)
EQ (279)
AT (280) 7 13 14 16
VAR (281) 6 7 12 13 14 15 16 18 19
GVAR (282) 4 5 8 21


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
line (36)
    on left: 1 2, on right: 0 2
stmt (37)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14, on right: 1 2
mopt (38)
    on left: 15 16, on right: 9
hopt (39)
    on left: 17 18, on right: 10
dopt (40)
    on left: 19 20 21, on right: 11


State 0

    0 $accept: . line $end

    SHOW    shift, and go to state 1
    EXIT    shift, and go to state 2
    SWITCH  shift, and go to state 3
    HEIGHT  shift, and go to state 4
    FITS    shift, and go to state 5
    PLACE   shift, and go to state 6
    DELETE  shift, and go to state 7
    IF      shift, and go to state 8
    MOVE    shift, and go to state 9
    VAR     shift, and go to state 10
    GVAR    shift, and go to state 11

    line  go to state 12
    stmt  go to state 13


State 1

    8 stmt: SHOW . GVAR

    GVAR  shift, and go to state 14


State 2

    3 stmt: EXIT .

    $default  reduce using rule 3 (stmt)


State 3

    4 stmt: SWITCH . GRID GVAR

    GRID  shift, and go to state 15


State 4

   10 stmt: HEIGHT . hopt

    VAR  shift, and go to state 16
    '('  shift, and go to state 17

    hopt  go to state 18


State 5

   12 stmt: FITS . VAR '(' NUM ',' NUM ')'

    VAR  shift, and go to state 19


State 6

    7 stmt: PLACE . VAR AT '(' NUM ',' NUM ')'

    VAR  shift, and go to state 20


State 7

   11 stmt: DELETE . dopt

    GRID  shift, and go to state 21
    ALL   shift, and go to state 22
    VAR   shift, and go to state 23

    dopt  go to state 24


State 8

   13 stmt: IF . FITS VAR AT '(' NUM ',' NUM ')' THEN PLACE
   14     | IF . FITS VAR AT '(' NUM ',' NUM ')' THEN MOVE

    FITS  shift, and go to state 25


State 9

    9 stmt: MOVE . mopt

    VAR  shift, and go to state 26

    mopt  go to state 27


State 10

    6 stmt: VAR . '=' TYPE '(' NUM ',' NUM ')'

    '='  shift, and go to state 28


State 11

    5 stmt: GVAR . '=' GRID '(' NUM ',' NUM ')'

    '='  shift, and go to state 29


State 12

    0 $accept: line . $end

    $end  shift, and go to state 30


State 13

    1 line: stmt . '\n'
    2     | stmt . line

    SHOW    shift, and go to state 1
    EXIT    shift, and go to state 2
    SWITCH  shift, and go to state 3
    HEIGHT  shift, and go to state 4
    FITS    shift, and go to state 5
    PLACE   shift, and go to state 6
    DELETE  shift, and go to state 7
    IF      shift, and go to state 8
    MOVE    shift, and go to state 9
    VAR     shift, and go to state 10
    GVAR    shift, and go to state 11
    '\n'    shift, and go to state 31

    line  go to state 32
    stmt  go to state 13


State 14

    8 stmt: SHOW GVAR .

    $default  reduce using rule 8 (stmt)


State 15

    4 stmt: SWITCH GRID . GVAR

    GVAR  shift, and go to state 33


State 16

   18 hopt: VAR .

    $default  reduce using rule 18 (hopt)


State 17

   17 hopt: '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 34


State 18

   10 stmt: HEIGHT hopt .

    $default  reduce using rule 10 (stmt)


State 19

   12 stmt: FITS VAR . '(' NUM ',' NUM ')'

    '('  shift, and go to state 35


State 20

    7 stmt: PLACE VAR . AT '(' NUM ',' NUM ')'

    AT  shift, and go to state 36


State 21

   21 dopt: GRID . GVAR

    GVAR  shift, and go to state 37


State 22

   20 dopt: ALL .

    $default  reduce using rule 20 (dopt)


State 23

   19 dopt: VAR .

    $default  reduce using rule 19 (dopt)


State 24

   11 stmt: DELETE dopt .

    $default  reduce using rule 11 (stmt)


State 25

   13 stmt: IF FITS . VAR AT '(' NUM ',' NUM ')' THEN PLACE
   14     | IF FITS . VAR AT '(' NUM ',' NUM ')' THEN MOVE

    VAR  shift, and go to state 38


State 26

   15 mopt: VAR . DIR NUM
   16     | VAR . AT '(' NUM ',' NUM ')'

    DIR  shift, and go to state 39
    AT   shift, and go to state 40


State 27

    9 stmt: MOVE mopt .

    $default  reduce using rule 9 (stmt)


State 28

    6 stmt: VAR '=' . TYPE '(' NUM ',' NUM ')'

    TYPE  shift, and go to state 41


State 29

    5 stmt: GVAR '=' . GRID '(' NUM ',' NUM ')'

    GRID  shift, and go to state 42


State 30

    0 $accept: line $end .

    $default  accept


State 31

    1 line: stmt '\n' .

    $default  reduce using rule 1 (line)


State 32

    2 line: stmt line .

    $default  reduce using rule 2 (line)


State 33

    4 stmt: SWITCH GRID GVAR .

    $default  reduce using rule 4 (stmt)


State 34

   17 hopt: '(' NUM . ',' NUM ')'

    ','  shift, and go to state 43


State 35

   12 stmt: FITS VAR '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 44


State 36

    7 stmt: PLACE VAR AT . '(' NUM ',' NUM ')'

    '('  shift, and go to state 45


State 37

   21 dopt: GRID GVAR .

    $default  reduce using rule 21 (dopt)


State 38

   13 stmt: IF FITS VAR . AT '(' NUM ',' NUM ')' THEN PLACE
   14     | IF FITS VAR . AT '(' NUM ',' NUM ')' THEN MOVE

    AT  shift, and go to state 46


State 39

   15 mopt: VAR DIR . NUM

    NUM  shift, and go to state 47


State 40

   16 mopt: VAR AT . '(' NUM ',' NUM ')'

    '('  shift, and go to state 48


State 41

    6 stmt: VAR '=' TYPE . '(' NUM ',' NUM ')'

    '('  shift, and go to state 49


State 42

    5 stmt: GVAR '=' GRID . '(' NUM ',' NUM ')'

    '('  shift, and go to state 50


State 43

   17 hopt: '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 51


State 44

   12 stmt: FITS VAR '(' NUM . ',' NUM ')'

    ','  shift, and go to state 52


State 45

    7 stmt: PLACE VAR AT '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 53


State 46

   13 stmt: IF FITS VAR AT . '(' NUM ',' NUM ')' THEN PLACE
   14     | IF FITS VAR AT . '(' NUM ',' NUM ')' THEN MOVE

    '('  shift, and go to state 54


State 47

   15 mopt: VAR DIR NUM .

    $default  reduce using rule 15 (mopt)


State 48

   16 mopt: VAR AT '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 55


State 49

    6 stmt: VAR '=' TYPE '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 56


State 50

    5 stmt: GVAR '=' GRID '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 57


State 51

   17 hopt: '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 58


State 52

   12 stmt: FITS VAR '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 59


State 53

    7 stmt: PLACE VAR AT '(' NUM . ',' NUM ')'

    ','  shift, and go to state 60


State 54

   13 stmt: IF FITS VAR AT '(' . NUM ',' NUM ')' THEN PLACE
   14     | IF FITS VAR AT '(' . NUM ',' NUM ')' THEN MOVE

    NUM  shift, and go to state 61


State 55

   16 mopt: VAR AT '(' NUM . ',' NUM ')'

    ','  shift, and go to state 62


State 56

    6 stmt: VAR '=' TYPE '(' NUM . ',' NUM ')'

    ','  shift, and go to state 63


State 57

    5 stmt: GVAR '=' GRID '(' NUM . ',' NUM ')'

    ','  shift, and go to state 64


State 58

   17 hopt: '(' NUM ',' NUM ')' .

    $default  reduce using rule 17 (hopt)


State 59

   12 stmt: FITS VAR '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 65


State 60

    7 stmt: PLACE VAR AT '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 66


State 61

   13 stmt: IF FITS VAR AT '(' NUM . ',' NUM ')' THEN PLACE
   14     | IF FITS VAR AT '(' NUM . ',' NUM ')' THEN MOVE

    ','  shift, and go to state 67


State 62

   16 mopt: VAR AT '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 68


State 63

    6 stmt: VAR '=' TYPE '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 69


State 64

    5 stmt: GVAR '=' GRID '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 70


State 65

   12 stmt: FITS VAR '(' NUM ',' NUM ')' .

    $default  reduce using rule 12 (stmt)


State 66

    7 stmt: PLACE VAR AT '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 71


State 67

   13 stmt: IF FITS VAR AT '(' NUM ',' . NUM ')' THEN PLACE
   14     | IF FITS VAR AT '(' NUM ',' . NUM ')' THEN MOVE

    NUM  shift, and go to state 72


State 68

   16 mopt: VAR AT '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 73


State 69

    6 stmt: VAR '=' TYPE '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 74


State 70

    5 stmt: GVAR '=' GRID '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 75


State 71

    7 stmt: PLACE VAR AT '(' NUM ',' NUM ')' .

    $default  reduce using rule 7 (stmt)


State 72

   13 stmt: IF FITS VAR AT '(' NUM ',' NUM . ')' THEN PLACE
   14     | IF FITS VAR AT '(' NUM ',' NUM . ')' THEN MOVE

    ')'  shift, and go to state 76


State 73

   16 mopt: VAR AT '(' NUM ',' NUM ')' .

    $default  reduce using rule 16 (mopt)


State 74

    6 stmt: VAR '=' TYPE '(' NUM ',' NUM ')' .

    $default  reduce using rule 6 (stmt)


State 75

    5 stmt: GVAR '=' GRID '(' NUM ',' NUM ')' .

    $default  reduce using rule 5 (stmt)


State 76

   13 stmt: IF FITS VAR AT '(' NUM ',' NUM ')' . THEN PLACE
   14     | IF FITS VAR AT '(' NUM ',' NUM ')' . THEN MOVE

    THEN  shift, and go to state 77


State 77

   13 stmt: IF FITS VAR AT '(' NUM ',' NUM ')' THEN . PLACE
   14     | IF FITS VAR AT '(' NUM ',' NUM ')' THEN . MOVE

    PLACE  shift, and go to state 78
    MOVE   shift, and go to state 79


State 78

   13 stmt: IF FITS VAR AT '(' NUM ',' NUM ')' THEN PLACE .

    $default  reduce using rule 13 (stmt)


State 79

   14 stmt: IF FITS VAR AT '(' NUM ',' NUM ')' THEN MOVE .

    $default  reduce using rule 14 (stmt)
