State 34 conflicts: 1 reduce/reduce


Grammar

    0 $accept: line $end

    1 line: stmt '\n'
    2     | stmt line
    3     | '\n'

    4 stmt: EXIT
    5     | SWITCH GRID GVAR
    6     | GVAR '=' GRID '(' NUM ',' NUM ')'
    7     | VAR '=' TYPE '(' NUM ',' NUM ')'
    8     | PLACE VAR AT '(' NUM ',' NUM ')'
    9     | SHOW GVAR
   10     | MOVE mopt
   11     | HEIGHT hopt
   12     | DELETE dopt
   13     | FITS VAR '(' NUM ',' NUM ')'
   14     | IF FITS VAR AT '(' NUM ',' NUM ')' THEN PLACE
   15     | IF FITS VAR AT '(' NUM ',' NUM ')' THEN MOVE
   16     | WHILE POSSIBLE ':' MOVE VAR DIR NUM

   17 mopt: VAR DIR NUM
   18     | VAR AT '(' NUM ',' NUM ')'

   19 hopt: '(' NUM ',' NUM ')'
   20     | VAR

   21 dopt: VAR
   22     | ALL
   23     | GRID GVAR


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 3
'(' (40) 6 7 8 13 14 15 18 19
')' (41) 6 7 8 13 14 15 18 19
',' (44) 6 7 8 13 14 15 18 19
':' (58) 16
'=' (61) 6 7
error (256)
NUM (258) 6 7 8 13 14 15 16 17 18 19
DIR (259) 16 17
TYPE (260) 7
VAR (261) 7 8 13 14 15 16 17 18 20 21
GVAR (262) 5 6 9 23
SHOW (263) 9
EXIT (264) 4
SWITCH (265) 5
POSSIBLE (266) 16
WHILE (267) 16
GRID (268) 5 6 23
HEIGHT (269) 11
FITS (270) 13 14 15
PLACE (271) 8 14
DELETE (272) 12
ALL (273) 22
IF (274) 14 15
THEN (275) 14 15
MOVE (276) 10 15 16
AT (277) 8 14 15 18


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
line (30)
    on left: 1 2 3, on right: 0 2
stmt (31)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 1 2
mopt (32)
    on left: 17 18, on right: 10
hopt (33)
    on left: 19 20, on right: 11
dopt (34)
    on left: 21 22 23, on right: 12


State 0

    0 $accept: . line $end

    VAR     shift, and go to state 1
    GVAR    shift, and go to state 2
    SHOW    shift, and go to state 3
    EXIT    shift, and go to state 4
    SWITCH  shift, and go to state 5
    WHILE   shift, and go to state 6
    HEIGHT  shift, and go to state 7
    FITS    shift, and go to state 8
    PLACE   shift, and go to state 9
    DELETE  shift, and go to state 10
    IF      shift, and go to state 11
    MOVE    shift, and go to state 12
    '\n'    shift, and go to state 13

    line  go to state 14
    stmt  go to state 15


State 1

    7 stmt: VAR . '=' TYPE '(' NUM ',' NUM ')'

    '='  shift, and go to state 16


State 2

    6 stmt: GVAR . '=' GRID '(' NUM ',' NUM ')'

    '='  shift, and go to state 17


State 3

    9 stmt: SHOW . GVAR

    GVAR  shift, and go to state 18


State 4

    4 stmt: EXIT .

    $default  reduce using rule 4 (stmt)


State 5

    5 stmt: SWITCH . GRID GVAR

    GRID  shift, and go to state 19


State 6

   16 stmt: WHILE . POSSIBLE ':' MOVE VAR DIR NUM

    POSSIBLE  shift, and go to state 20


State 7

   11 stmt: HEIGHT . hopt

    VAR  shift, and go to state 21
    '('  shift, and go to state 22

    hopt  go to state 23


State 8

   13 stmt: FITS . VAR '(' NUM ',' NUM ')'

    VAR  shift, and go to state 24


State 9

    8 stmt: PLACE . VAR AT '(' NUM ',' NUM ')'

    VAR  shift, and go to state 25


State 10

   12 stmt: DELETE . dopt

    VAR   shift, and go to state 26
    GRID  shift, and go to state 27
    ALL   shift, and go to state 28

    dopt  go to state 29


State 11

   14 stmt: IF . FITS VAR AT '(' NUM ',' NUM ')' THEN PLACE
   15     | IF . FITS VAR AT '(' NUM ',' NUM ')' THEN MOVE

    FITS  shift, and go to state 30


State 12

   10 stmt: MOVE . mopt

    VAR  shift, and go to state 31

    mopt  go to state 32


State 13

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 14

    0 $accept: line . $end

    $end  shift, and go to state 33


State 15

    1 line: stmt . '\n'
    2     | stmt . line

    VAR     shift, and go to state 1
    GVAR    shift, and go to state 2
    SHOW    shift, and go to state 3
    EXIT    shift, and go to state 4
    SWITCH  shift, and go to state 5
    WHILE   shift, and go to state 6
    HEIGHT  shift, and go to state 7
    FITS    shift, and go to state 8
    PLACE   shift, and go to state 9
    DELETE  shift, and go to state 10
    IF      shift, and go to state 11
    MOVE    shift, and go to state 12
    '\n'    shift, and go to state 34

    line  go to state 35
    stmt  go to state 15


State 16

    7 stmt: VAR '=' . TYPE '(' NUM ',' NUM ')'

    TYPE  shift, and go to state 36


State 17

    6 stmt: GVAR '=' . GRID '(' NUM ',' NUM ')'

    GRID  shift, and go to state 37


State 18

    9 stmt: SHOW GVAR .

    $default  reduce using rule 9 (stmt)


State 19

    5 stmt: SWITCH GRID . GVAR

    GVAR  shift, and go to state 38


State 20

   16 stmt: WHILE POSSIBLE . ':' MOVE VAR DIR NUM

    ':'  shift, and go to state 39


State 21

   20 hopt: VAR .

    $default  reduce using rule 20 (hopt)


State 22

   19 hopt: '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 40


State 23

   11 stmt: HEIGHT hopt .

    $default  reduce using rule 11 (stmt)


State 24

   13 stmt: FITS VAR . '(' NUM ',' NUM ')'

    '('  shift, and go to state 41


State 25

    8 stmt: PLACE VAR . AT '(' NUM ',' NUM ')'

    AT  shift, and go to state 42


State 26

   21 dopt: VAR .

    $default  reduce using rule 21 (dopt)


State 27

   23 dopt: GRID . GVAR

    GVAR  shift, and go to state 43


State 28

   22 dopt: ALL .

    $default  reduce using rule 22 (dopt)


State 29

   12 stmt: DELETE dopt .

    $default  reduce using rule 12 (stmt)


State 30

   14 stmt: IF FITS . VAR AT '(' NUM ',' NUM ')' THEN PLACE
   15     | IF FITS . VAR AT '(' NUM ',' NUM ')' THEN MOVE

    VAR  shift, and go to state 44


State 31

   17 mopt: VAR . DIR NUM
   18     | VAR . AT '(' NUM ',' NUM ')'

    DIR  shift, and go to state 45
    AT   shift, and go to state 46


State 32

   10 stmt: MOVE mopt .

    $default  reduce using rule 10 (stmt)


State 33

    0 $accept: line $end .

    $default  accept


State 34

    1 line: stmt '\n' .
    3     | '\n' .

    $end      reduce using rule 1 (line)
    $end      [reduce using rule 3 (line)]
    $default  reduce using rule 1 (line)


State 35

    2 line: stmt line .

    $default  reduce using rule 2 (line)


State 36

    7 stmt: VAR '=' TYPE . '(' NUM ',' NUM ')'

    '('  shift, and go to state 47


State 37

    6 stmt: GVAR '=' GRID . '(' NUM ',' NUM ')'

    '('  shift, and go to state 48


State 38

    5 stmt: SWITCH GRID GVAR .

    $default  reduce using rule 5 (stmt)


State 39

   16 stmt: WHILE POSSIBLE ':' . MOVE VAR DIR NUM

    MOVE  shift, and go to state 49


State 40

   19 hopt: '(' NUM . ',' NUM ')'

    ','  shift, and go to state 50


State 41

   13 stmt: FITS VAR '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 51


State 42

    8 stmt: PLACE VAR AT . '(' NUM ',' NUM ')'

    '('  shift, and go to state 52


State 43

   23 dopt: GRID GVAR .

    $default  reduce using rule 23 (dopt)


State 44

   14 stmt: IF FITS VAR . AT '(' NUM ',' NUM ')' THEN PLACE
   15     | IF FITS VAR . AT '(' NUM ',' NUM ')' THEN MOVE

    AT  shift, and go to state 53


State 45

   17 mopt: VAR DIR . NUM

    NUM  shift, and go to state 54


State 46

   18 mopt: VAR AT . '(' NUM ',' NUM ')'

    '('  shift, and go to state 55


State 47

    7 stmt: VAR '=' TYPE '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 56


State 48

    6 stmt: GVAR '=' GRID '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 57


State 49

   16 stmt: WHILE POSSIBLE ':' MOVE . VAR DIR NUM

    VAR  shift, and go to state 58


State 50

   19 hopt: '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 59


State 51

   13 stmt: FITS VAR '(' NUM . ',' NUM ')'

    ','  shift, and go to state 60


State 52

    8 stmt: PLACE VAR AT '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 61


State 53

   14 stmt: IF FITS VAR AT . '(' NUM ',' NUM ')' THEN PLACE
   15     | IF FITS VAR AT . '(' NUM ',' NUM ')' THEN MOVE

    '('  shift, and go to state 62


State 54

   17 mopt: VAR DIR NUM .

    $default  reduce using rule 17 (mopt)


State 55

   18 mopt: VAR AT '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 63


State 56

    7 stmt: VAR '=' TYPE '(' NUM . ',' NUM ')'

    ','  shift, and go to state 64


State 57

    6 stmt: GVAR '=' GRID '(' NUM . ',' NUM ')'

    ','  shift, and go to state 65


State 58

   16 stmt: WHILE POSSIBLE ':' MOVE VAR . DIR NUM

    DIR  shift, and go to state 66


State 59

   19 hopt: '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 67


State 60

   13 stmt: FITS VAR '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 68


State 61

    8 stmt: PLACE VAR AT '(' NUM . ',' NUM ')'

    ','  shift, and go to state 69


State 62

   14 stmt: IF FITS VAR AT '(' . NUM ',' NUM ')' THEN PLACE
   15     | IF FITS VAR AT '(' . NUM ',' NUM ')' THEN MOVE

    NUM  shift, and go to state 70


State 63

   18 mopt: VAR AT '(' NUM . ',' NUM ')'

    ','  shift, and go to state 71


State 64

    7 stmt: VAR '=' TYPE '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 72


State 65

    6 stmt: GVAR '=' GRID '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 73


State 66

   16 stmt: WHILE POSSIBLE ':' MOVE VAR DIR . NUM

    NUM  shift, and go to state 74


State 67

   19 hopt: '(' NUM ',' NUM ')' .

    $default  reduce using rule 19 (hopt)


State 68

   13 stmt: FITS VAR '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 75


State 69

    8 stmt: PLACE VAR AT '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 76


State 70

   14 stmt: IF FITS VAR AT '(' NUM . ',' NUM ')' THEN PLACE
   15     | IF FITS VAR AT '(' NUM . ',' NUM ')' THEN MOVE

    ','  shift, and go to state 77


State 71

   18 mopt: VAR AT '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 78


State 72

    7 stmt: VAR '=' TYPE '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 79


State 73

    6 stmt: GVAR '=' GRID '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 80


State 74

   16 stmt: WHILE POSSIBLE ':' MOVE VAR DIR NUM .

    $default  reduce using rule 16 (stmt)


State 75

   13 stmt: FITS VAR '(' NUM ',' NUM ')' .

    $default  reduce using rule 13 (stmt)


State 76

    8 stmt: PLACE VAR AT '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 81


State 77

   14 stmt: IF FITS VAR AT '(' NUM ',' . NUM ')' THEN PLACE
   15     | IF FITS VAR AT '(' NUM ',' . NUM ')' THEN MOVE

    NUM  shift, and go to state 82


State 78

   18 mopt: VAR AT '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 83


State 79

    7 stmt: VAR '=' TYPE '(' NUM ',' NUM ')' .

    $default  reduce using rule 7 (stmt)


State 80

    6 stmt: GVAR '=' GRID '(' NUM ',' NUM ')' .

    $default  reduce using rule 6 (stmt)


State 81

    8 stmt: PLACE VAR AT '(' NUM ',' NUM ')' .

    $default  reduce using rule 8 (stmt)


State 82

   14 stmt: IF FITS VAR AT '(' NUM ',' NUM . ')' THEN PLACE
   15     | IF FITS VAR AT '(' NUM ',' NUM . ')' THEN MOVE

    ')'  shift, and go to state 84


State 83

   18 mopt: VAR AT '(' NUM ',' NUM ')' .

    $default  reduce using rule 18 (mopt)


State 84

   14 stmt: IF FITS VAR AT '(' NUM ',' NUM ')' . THEN PLACE
   15     | IF FITS VAR AT '(' NUM ',' NUM ')' . THEN MOVE

    THEN  shift, and go to state 85


State 85

   14 stmt: IF FITS VAR AT '(' NUM ',' NUM ')' THEN . PLACE
   15     | IF FITS VAR AT '(' NUM ',' NUM ')' THEN . MOVE

    PLACE  shift, and go to state 86
    MOVE   shift, and go to state 87


State 86

   14 stmt: IF FITS VAR AT '(' NUM ',' NUM ')' THEN PLACE .

    $default  reduce using rule 14 (stmt)


State 87

   15 stmt: IF FITS VAR AT '(' NUM ',' NUM ')' THEN MOVE .

    $default  reduce using rule 15 (stmt)
