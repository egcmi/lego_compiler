Nonterminals useless in grammar

   dopt


Terminals unused in grammar

   SHOW
   ALL
   IF
   THEN
   ELSE
   AND
   OR
   EQ
   '>'
   '<'


Rules useless in grammar

   19 dopt: VAR
   20     | ALL
   21     | GRID


Grammar

    0 $accept: line $end

    1 line: expr '\n'
    2     | expr line

    3 expr: EXIT
    4     | GRID NUM NUM
    5     | type VAR '=' '(' NUM ',' NUM ')'
    6     | PLACE VAR AT '(' NUM ',' NUM ')'
    7     | MOVE mopt
    8     | HEIGHT hopt
    9     | DELETE VAR
   10     | FITS VAR '(' NUM ',' NUM ')'

   11 type: MATRIX NUM NUM
   12     | ARRAY NUM
   13     | DOME
   14     | PYRAMID NUM NUM

   15 mopt: VAR DIR NUM
   16     | VAR AT '(' NUM ',' NUM ')'

   17 hopt: '(' NUM ',' NUM ')'
   18     | VAR


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'(' (40) 5 6 10 16 17
')' (41) 5 6 10 16 17
',' (44) 5 6 10 16 17
'<' (60)
'=' (61) 5
'>' (62)
error (256)
NUM (258) 4 5 6 10 11 12 14 15 16 17
DIR (259) 15
SHOW (260)
EXIT (261) 3
MATRIX (262) 11
ARRAY (263) 12
PYRAMID (264) 14
DOME (265) 13
GRID (266) 4
HEIGHT (267) 8
FITS (268) 10
PLACE (269) 6
DELETE (270) 9
ALL (271)
IF (272)
THEN (273)
ELSE (274)
MOVE (275) 7
AND (276)
OR (277)
EQ (278)
AT (279) 6 16
VAR (280) 5 6 9 10 15 16 18


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
line (34)
    on left: 1 2, on right: 0 2
expr (35)
    on left: 3 4 5 6 7 8 9 10, on right: 1 2
type (36)
    on left: 11 12 13 14, on right: 5
mopt (37)
    on left: 15 16, on right: 7
hopt (38)
    on left: 17 18, on right: 8


State 0

    0 $accept: . line $end

    EXIT     shift, and go to state 1
    MATRIX   shift, and go to state 2
    ARRAY    shift, and go to state 3
    PYRAMID  shift, and go to state 4
    DOME     shift, and go to state 5
    GRID     shift, and go to state 6
    HEIGHT   shift, and go to state 7
    FITS     shift, and go to state 8
    PLACE    shift, and go to state 9
    DELETE   shift, and go to state 10
    MOVE     shift, and go to state 11

    line  go to state 12
    expr  go to state 13
    type  go to state 14


State 1

    3 expr: EXIT .

    $default  reduce using rule 3 (expr)


State 2

   11 type: MATRIX . NUM NUM

    NUM  shift, and go to state 15


State 3

   12 type: ARRAY . NUM

    NUM  shift, and go to state 16


State 4

   14 type: PYRAMID . NUM NUM

    NUM  shift, and go to state 17


State 5

   13 type: DOME .

    $default  reduce using rule 13 (type)


State 6

    4 expr: GRID . NUM NUM

    NUM  shift, and go to state 18


State 7

    8 expr: HEIGHT . hopt

    VAR  shift, and go to state 19
    '('  shift, and go to state 20

    hopt  go to state 21


State 8

   10 expr: FITS . VAR '(' NUM ',' NUM ')'

    VAR  shift, and go to state 22


State 9

    6 expr: PLACE . VAR AT '(' NUM ',' NUM ')'

    VAR  shift, and go to state 23


State 10

    9 expr: DELETE . VAR

    VAR  shift, and go to state 24


State 11

    7 expr: MOVE . mopt

    VAR  shift, and go to state 25

    mopt  go to state 26


State 12

    0 $accept: line . $end

    $end  shift, and go to state 27


State 13

    1 line: expr . '\n'
    2     | expr . line

    EXIT     shift, and go to state 1
    MATRIX   shift, and go to state 2
    ARRAY    shift, and go to state 3
    PYRAMID  shift, and go to state 4
    DOME     shift, and go to state 5
    GRID     shift, and go to state 6
    HEIGHT   shift, and go to state 7
    FITS     shift, and go to state 8
    PLACE    shift, and go to state 9
    DELETE   shift, and go to state 10
    MOVE     shift, and go to state 11
    '\n'     shift, and go to state 28

    line  go to state 29
    expr  go to state 13
    type  go to state 14


State 14

    5 expr: type . VAR '=' '(' NUM ',' NUM ')'

    VAR  shift, and go to state 30


State 15

   11 type: MATRIX NUM . NUM

    NUM  shift, and go to state 31


State 16

   12 type: ARRAY NUM .

    $default  reduce using rule 12 (type)


State 17

   14 type: PYRAMID NUM . NUM

    NUM  shift, and go to state 32


State 18

    4 expr: GRID NUM . NUM

    NUM  shift, and go to state 33


State 19

   18 hopt: VAR .

    $default  reduce using rule 18 (hopt)


State 20

   17 hopt: '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 34


State 21

    8 expr: HEIGHT hopt .

    $default  reduce using rule 8 (expr)


State 22

   10 expr: FITS VAR . '(' NUM ',' NUM ')'

    '('  shift, and go to state 35


State 23

    6 expr: PLACE VAR . AT '(' NUM ',' NUM ')'

    AT  shift, and go to state 36


State 24

    9 expr: DELETE VAR .

    $default  reduce using rule 9 (expr)


State 25

   15 mopt: VAR . DIR NUM
   16     | VAR . AT '(' NUM ',' NUM ')'

    DIR  shift, and go to state 37
    AT   shift, and go to state 38


State 26

    7 expr: MOVE mopt .

    $default  reduce using rule 7 (expr)


State 27

    0 $accept: line $end .

    $default  accept


State 28

    1 line: expr '\n' .

    $default  reduce using rule 1 (line)


State 29

    2 line: expr line .

    $default  reduce using rule 2 (line)


State 30

    5 expr: type VAR . '=' '(' NUM ',' NUM ')'

    '='  shift, and go to state 39


State 31

   11 type: MATRIX NUM NUM .

    $default  reduce using rule 11 (type)


State 32

   14 type: PYRAMID NUM NUM .

    $default  reduce using rule 14 (type)


State 33

    4 expr: GRID NUM NUM .

    $default  reduce using rule 4 (expr)


State 34

   17 hopt: '(' NUM . ',' NUM ')'

    ','  shift, and go to state 40


State 35

   10 expr: FITS VAR '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 41


State 36

    6 expr: PLACE VAR AT . '(' NUM ',' NUM ')'

    '('  shift, and go to state 42


State 37

   15 mopt: VAR DIR . NUM

    NUM  shift, and go to state 43


State 38

   16 mopt: VAR AT . '(' NUM ',' NUM ')'

    '('  shift, and go to state 44


State 39

    5 expr: type VAR '=' . '(' NUM ',' NUM ')'

    '('  shift, and go to state 45


State 40

   17 hopt: '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 46


State 41

   10 expr: FITS VAR '(' NUM . ',' NUM ')'

    ','  shift, and go to state 47


State 42

    6 expr: PLACE VAR AT '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 48


State 43

   15 mopt: VAR DIR NUM .

    $default  reduce using rule 15 (mopt)


State 44

   16 mopt: VAR AT '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 49


State 45

    5 expr: type VAR '=' '(' . NUM ',' NUM ')'

    NUM  shift, and go to state 50


State 46

   17 hopt: '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 51


State 47

   10 expr: FITS VAR '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 52


State 48

    6 expr: PLACE VAR AT '(' NUM . ',' NUM ')'

    ','  shift, and go to state 53


State 49

   16 mopt: VAR AT '(' NUM . ',' NUM ')'

    ','  shift, and go to state 54


State 50

    5 expr: type VAR '=' '(' NUM . ',' NUM ')'

    ','  shift, and go to state 55


State 51

   17 hopt: '(' NUM ',' NUM ')' .

    $default  reduce using rule 17 (hopt)


State 52

   10 expr: FITS VAR '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 56


State 53

    6 expr: PLACE VAR AT '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 57


State 54

   16 mopt: VAR AT '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 58


State 55

    5 expr: type VAR '=' '(' NUM ',' . NUM ')'

    NUM  shift, and go to state 59


State 56

   10 expr: FITS VAR '(' NUM ',' NUM ')' .

    $default  reduce using rule 10 (expr)


State 57

    6 expr: PLACE VAR AT '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 60


State 58

   16 mopt: VAR AT '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 61


State 59

    5 expr: type VAR '=' '(' NUM ',' NUM . ')'

    ')'  shift, and go to state 62


State 60

    6 expr: PLACE VAR AT '(' NUM ',' NUM ')' .

    $default  reduce using rule 6 (expr)


State 61

   16 mopt: VAR AT '(' NUM ',' NUM ')' .

    $default  reduce using rule 16 (mopt)


State 62

    5 expr: type VAR '=' '(' NUM ',' NUM ')' .

    $default  reduce using rule 5 (expr)
